<!-- 
This launch file starts two hokuyo scanners and laser scan merger
as well as laser scan matcher and obstacle detector. It also
configures transformations and starts Rviz for data visualisation.
-->

<launch>
  <node name="front_hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" required="false" output="screen">
    <param name="port" type="string" value="/dev/sensors/hokuyo_H0904847"/>
    <param name="frame_id" type="string" value="/front_laser"/>

    <param name="intensity" type="bool" value="false"/>
    <param name="calibrate_time" type="bool" value="true"/>

    <param name="min_ang" value="-2.0862"/>	<!-- +/-120 [deg] -->
    <param name="max_ang" value="2.0923"/>
    <param name="skip" value="0"/>
    <param name="time_offset" value="0.0"/>
    <param name="cluster" value="1"/>

    <remap from="/scan" to="front_scan"/>
  </node>

  <node name="rear_hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" required="false" output="screen">
    <param name="port" type="string" value="/dev/sensors/hokuyo_H1320250"/>
    <param name="frame_id" type="string" value="/rear_laser"/>

    <param name="intensity" type="bool" value="false"/>
    <param name="calibrate_time" type="bool" value="true"/>

    <param name="min_ang" value="-2.0862"/>	<!-- +/-120 [deg] -->
    <param name="max_ang" value="2.0923"/>
    <param name="skip" value="0"/>
    <param name="time_offset" value="0.0"/>
    <param name="cluster" value="1"/>

    <remap from="/scan" to="rear_scan"/>
  </node>

  <node name="base_to_front_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="0.1825 0 0 0 0 0 /base /front_laser 100"/>

  <node name="base_to_rear_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="-0.1825 0 0 3.14159265 0 0 /base /rear_laser 100"/>

  <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
    <param name="destination_frame"       value="/laser"/>
    <param name="cloud_destination_topic" value="/merged_cloud"/>
    <param name="scan_destination_topic"  value="/scan"/>
    <param name="laserscan_topics"        value="/front_scan /rear_scan"/>
  </node>

  <node name="base_to_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="0 0 0 0 0 0 /base /laser 100"/>

  <node name="world_to_base" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="0 0 0 0 0 0 /world /base 100"/>

<!--  <node name="scan_matching" pkg="laser_scan_matcher" type="laser_scan_matcher_node" respawn="false" required="false"  output="screen">
    <param name="fixed_frame" value="/world"/>
    <param name="base_frame"  value="/base"/>
    
    <param name="use_imu"  value="false"/>
    <param name="use_odom" value="false"/>
    <param name="use_vel"  value="false"/>
    <param name="use_cloud_input" value="false"/>

    <param name="publish_tf" value="true"/>
    <param name="publish_pose" value="true"/>

    <param name="kf_dist_linear" value="0.0"/>
    <param name="kf_dist_angular" value="0.0"/>
  </node>
-->

  <node name="obstacle_detector" pkg="obstacle_detector" type="obstacle_detector_node" respawn="false" required="false" output="screen">
    <param name="frame_id"      type="string" value="/base"/>
    <param name="scan_topic"    type="string" value="/scan"/>

    <param name="split_and_merge" type="bool" value="true"/>
    <param name="detect_circles"  type="bool" value="true"/>
    <param name="publish_markers" type="bool" value="true"/>
    <param name="save_snapshot"   type="bool" value="false"/>

    <param name="max_scan_range"     value="5.599"/>
    <param name="min_group_points"   value="3"/>
    <param name="max_group_distance" value="0.100"/>
    <param name="max_split_distance" value="0.100"/>
    <param name="max_merge_distance" value="0.200"/>
    <param name="max_circle_radius"  value="0.500"/>
    <param name="radius_enlargement" value="0.050"/>
  </node>
  
  <node pkg="rviz" type="rviz" name="rviz" output="screen" args="-d $(find obstacle_detector)/resources/obstacle_detector.rviz"/>
</launch>

